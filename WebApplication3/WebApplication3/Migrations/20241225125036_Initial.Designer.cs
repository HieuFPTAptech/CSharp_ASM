// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication3.Data;

#nullable disable

namespace WebApplication3.Migrations
{
    [DbContext(typeof(crudDatabaseContext))]
    [Migration("20241225125036_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("WebApplication3.Models.ComicBook", b =>
                {
                    b.Property<int>("ComicBookID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ComicBookID");

                    b.ToTable("ComicBooks");

                    b.HasData(
                        new
                        {
                            ComicBookID = 1,
                            Author = "Aoyama",
                            PricePerDay = 2.5m,
                            Title = "Conan"
                        },
                        new
                        {
                            ComicBookID = 2,
                            Author = "Fujiko",
                            PricePerDay = 1.5m,
                            Title = "Doraemon"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CustomerID");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerID = 1,
                            CreateAt = new DateTime(2024, 12, 25, 19, 50, 36, 287, DateTimeKind.Local).AddTicks(8666),
                            FullName = "Nguyen Hung",
                            PhoneNumber = "0123456789"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.Rental", b =>
                {
                    b.Property<int>("RentalID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerID")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("RentalID");

                    b.ToTable("Rentals");

                    b.HasData(
                        new
                        {
                            RentalID = 1,
                            CustomerID = 1,
                            RentalDate = new DateTime(2024, 10, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ReturnDate = new DateTime(2024, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = "Completed"
                        });
                });

            modelBuilder.Entity("WebApplication3.Models.RentalDetail", b =>
                {
                    b.Property<int>("RetalDetailID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ComicBookID")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("PricePerDay")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("RentalID")
                        .HasColumnType("INTEGER");

                    b.HasKey("RetalDetailID");

                    b.ToTable("RentalDetails");

                    b.HasData(
                        new
                        {
                            RetalDetailID = 1,
                            ComicBookID = 1,
                            PricePerDay = 2.5m,
                            Quantity = 1,
                            RentalID = 1
                        },
                        new
                        {
                            RetalDetailID = 2,
                            ComicBookID = 2,
                            PricePerDay = 1.5m,
                            Quantity = 3,
                            RentalID = 1
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
